WEBVTT

1
00:00:00.752 --> 00:00:03.335
(upbeat music)

2
00:00:06.330 --> 00:00:08.380
<v Instructor>All right, let's talk about</v>

3
00:00:08.380 --> 00:00:09.620
once you have an element,

4
00:00:09.620 --> 00:00:12.210
what can you go ahead and do with it.

5
00:00:12.210 --> 00:00:15.610
So, let's take this h2 tag here.

6
00:00:15.610 --> 00:00:17.823
We can take that ID off, we don't need that.

7
00:00:18.740 --> 00:00:20.850
Let's go ahead a select that h2,

8
00:00:20.850 --> 00:00:25.490
so const heading is equal to document dot querySelector.

9
00:00:25.490 --> 00:00:28.830
We'll just grab the first h2 that's on the page.

10
00:00:28.830 --> 00:00:31.683
And let's go ahead and also log the heading.

11
00:00:32.860 --> 00:00:35.761
Now, you see that we've got this right here.

12
00:00:35.761 --> 00:00:38.660
It just may seem like it's just an actual element,

13
00:00:38.660 --> 00:00:42.820
but, in reality it's actually an object that has a lot of

14
00:00:42.820 --> 00:00:45.150
properties and methods inside of it.

15
00:00:45.150 --> 00:00:49.060
So if we change this console log to a console dot dir,

16
00:00:49.060 --> 00:00:52.840
what that will do, is it will show us the object properties

17
00:00:52.840 --> 00:00:54.670
instead of the actual element itself.

18
00:00:54.670 --> 00:00:57.930
So you see there, we open it up now.

19
00:00:57.930 --> 00:01:00.820
It's still the same h2 tag that we have.

20
00:01:00.820 --> 00:01:02.890
But, you'll see like whoah!

21
00:01:02.890 --> 00:01:04.860
Look at all this stuff!

22
00:01:04.860 --> 00:01:06.860
There's so much stuff in here.

23
00:01:06.860 --> 00:01:09.150
Almost all of it, you'll never need to use.

24
00:01:09.150 --> 00:01:11.410
It just a lot of legacy stuff.

25
00:01:11.410 --> 00:01:12.770
A lot of edge casey stuff,

26
00:01:12.770 --> 00:01:16.240
but there are a bunch of properties on here that

27
00:01:16.240 --> 00:01:19.350
will be helpful for actually working with the element.

28
00:01:19.350 --> 00:01:21.160
So, look at this.

29
00:01:21.160 --> 00:01:22.473
ParentElement, it tells you what the parent is.

30
00:01:23.774 --> 00:01:24.607
ParentNode.

31
00:01:24.607 --> 00:01:26.200
We'll talk about the difference between element and node

32
00:01:26.200 --> 00:01:27.093
in just a bit.

33
00:01:27.093 --> 00:01:29.395
OuterHTML, outerText.

34
00:01:29.395 --> 00:01:33.691
There's textContent, there's also innerText.

35
00:01:33.691 --> 00:01:37.270
So, scrollHeight, scrollWidth.

36
00:01:37.270 --> 00:01:39.760
You see all kinds of cool stuff is on here.

37
00:01:39.760 --> 00:01:42.270
So these are just properties.

38
00:01:42.270 --> 00:01:45.590
Meaning that we can either use them as getters.

39
00:01:45.590 --> 00:01:48.520
Meaning we just pull the data out of it that we need.

40
00:01:48.520 --> 00:01:49.960
Or as setters.

41
00:01:49.960 --> 00:01:52.390
So lets go ahead and use that textContent.

42
00:01:52.390 --> 00:01:54.543
So console log, heading dot textContent.

43
00:01:57.360 --> 00:02:00.070
That is going to show I am a heading.

44
00:02:00.070 --> 00:02:03.980
Now that is a getter.

45
00:02:03.980 --> 00:02:06.720
But you can also use them as setters.

46
00:02:06.720 --> 00:02:09.360
Setters is when you just update the property.

47
00:02:09.360 --> 00:02:12.200
So if you say heading dot textContent equals

48
00:02:12.200 --> 00:02:13.493
Wes is cool.

49
00:02:14.570 --> 00:02:15.950
Go to save.

50
00:02:15.950 --> 00:02:17.960
Now you see that when we load the page.

51
00:02:17.960 --> 00:02:21.800
We'll see Wes is cool, instead of whatever used to be there.

52
00:02:21.800 --> 00:02:24.223
You can actually console log,

53
00:02:25.177 --> 00:02:26.320
I'm using dir here still.

54
00:02:26.320 --> 00:02:29.740
You can log the textContent before and after.

55
00:02:29.740 --> 00:02:33.010
See, I am heading, is what it was and now it's, Wes is cool.

56
00:02:33.010 --> 00:02:37.920
Because we set the textContent property

57
00:02:37.920 --> 00:02:40.380
on that element.

58
00:02:40.380 --> 00:02:42.373
Now there's all kinds of,

59
00:03:15.470 --> 00:03:16.303
What else do we have?

60
00:03:16.303 --> 00:03:17.710
We also have innerText.

61
00:03:17.710 --> 00:03:19.810
So, if I change that textContent out

62
00:03:19.810 --> 00:03:20.920
or maybe I'll duplicate it.

63
00:03:20.920 --> 00:03:23.333
And then use innerText.

64
00:03:25.300 --> 00:03:28.710
What's the different between textContent and innerText?

65
00:03:28.710 --> 00:03:29.990
It's exactly the same thing.

66
00:03:29.990 --> 00:03:31.810
I honestly didn't know the difference.

67
00:03:31.810 --> 00:03:32.970
I had just been using,

68
00:03:32.970 --> 00:03:36.150
textContent is the newer one out of the two.

69
00:03:36.150 --> 00:03:38.530
But there are always those two.

70
00:03:38.530 --> 00:03:41.670
So I actually went on the MDN docs

71
00:03:41.670 --> 00:03:43.560
and said like, what is the different between the two?

72
00:03:43.560 --> 00:03:46.720
And says textContent gets all of the elements

73
00:03:46.720 --> 00:03:49.120
including script and style elements.

74
00:03:49.120 --> 00:03:52.150
In contrast, innerText only shows human readable elements.

75
00:03:52.150 --> 00:03:56.111
So, if for some reason this is not,

76
00:03:56.111 --> 00:03:57.850
especially in React land,

77
00:03:57.850 --> 00:03:59.370
this can actually happen.

78
00:03:59.370 --> 00:04:02.690
If for some reason you have a style tag in there,

79
00:04:02.690 --> 00:04:07.217
and maybe you say, h2 color red.

80
00:04:16.333 --> 00:04:18.860
If we were to refresh that.

81
00:04:18.860 --> 00:04:21.290
You see it says, I am heading.

82
00:04:21.290 --> 00:04:24.120
Wait, we need to log this before we actually change it.

83
00:04:24.120 --> 00:04:28.637
So we log the textContent and then the innerText.

84
00:04:32.210 --> 00:04:34.150
You'll see that innerText

85
00:04:34.150 --> 00:04:36.580
will give us just the I am heading.

86
00:04:36.580 --> 00:04:40.450
Whereas textContent will give you the contents of, sort of,

87
00:04:40.450 --> 00:04:41.590
I'm using quotes here.

88
00:04:41.590 --> 00:04:43.990
Imagine me putting my fingers in the air.

89
00:04:43.990 --> 00:04:44.950
Hidden ones.

90
00:04:44.950 --> 00:04:46.820
So that's the first big one.

91
00:04:46.820 --> 00:04:49.610
Second one is content returns every element in the node.

92
00:04:49.610 --> 00:04:52.840
In contrast innerText is aware of styling

93
00:04:52.840 --> 00:04:56.750
and won't return text of hidden elements.

94
00:04:56.750 --> 00:04:58.520
That's actually kind of cool.

95
00:04:58.520 --> 00:05:01.215
Because, if you take a look here,

96
00:05:01.215 --> 00:05:03.780
let's get rid of this altogether.

97
00:05:03.780 --> 00:05:07.170
I am heading and then maybe we put a span in here.

98
00:05:07.170 --> 00:05:08.587
I am hidden.

99
00:05:09.870 --> 00:05:12.750
And then maybe make like a style tag down here.

100
00:05:12.750 --> 00:05:16.320
And it'll say, anytime we have a h2

101
00:05:16.320 --> 00:05:18.010
that has a span inside of it,

102
00:05:18.010 --> 00:05:19.363
we'll display none of it.

103
00:05:21.410 --> 00:05:23.550
So let's see, is it there?

104
00:05:23.550 --> 00:05:25.913
We gotta take this thing off.

105
00:05:29.390 --> 00:05:30.543
So I am heading.

106
00:05:31.380 --> 00:05:32.370
Here's the hidden element.

107
00:05:32.370 --> 00:05:34.040
You can't see it.

108
00:05:34.040 --> 00:05:36.810
Now, if we go to our console here,

109
00:05:36.810 --> 00:05:41.810
you see that the textContent gives us the hidden text

110
00:05:42.310 --> 00:05:44.530
as well as white space it looks like.

111
00:05:44.530 --> 00:05:46.990
And innerText will just trim it out

112
00:05:46.990 --> 00:05:47.950
and not show us it.

113
00:05:47.950 --> 00:05:51.660
So innerText is aware of css styling.

114
00:05:51.660 --> 00:05:55.270
That's something I didn't know until like six months ago.

115
00:05:55.270 --> 00:05:57.310
When I was just curious about it and I Googled it.

116
00:05:57.310 --> 00:06:00.490
But, that certainly something that could come and bite ya

117
00:06:00.490 --> 00:06:02.270
if you do have it.

118
00:06:02.270 --> 00:06:03.900
Unlike textContent,

119
00:06:03.900 --> 00:06:06.300
altering innerText in Internet Explorer 11

120
00:06:06.300 --> 00:06:08.670
removes child nodes permanently destroys

121
00:06:08.670 --> 00:06:10.480
all descendant of the nodes, so.

122
00:06:10.480 --> 00:06:11.740
That's not that important.

123
00:06:11.740 --> 00:06:12.823
So good to know.

124
00:06:15.710 --> 00:06:19.610
We also have a set of properties for working with HTML.

125
00:06:19.610 --> 00:06:22.960
So let's actually leave this span inside of here

126
00:06:22.960 --> 00:06:25.260
that says I am hidden.

127
00:06:25.260 --> 00:06:29.273
And if we were to console log the innerHTML.

128
00:06:31.670 --> 00:06:32.503
What do you get?

129
00:06:32.503 --> 00:06:34.830
You get the actual HTML that fills it up.

130
00:06:34.830 --> 00:06:39.280
We also have the outerHTML and that should give us the

131
00:06:39.280 --> 00:06:43.940
including h2 tag as well as the white space

132
00:06:46.020 --> 00:06:47.733
that goes inside of it.

133
00:06:49.028 --> 00:06:53.000
Another thing here is that if you ever want to

134
00:06:53.000 --> 00:06:56.170
tack text onto something.

135
00:06:56.170 --> 00:06:58.910
So let's do a totally separate example here.

136
00:06:58.910 --> 00:07:02.020
Let's go into one of our items here

137
00:07:05.472 --> 00:07:08.837
and say this is how many pizzas I ate.

138
00:07:11.520 --> 00:07:14.500
And then we'll just start with one pizza emoji.

139
00:07:14.500 --> 00:07:17.160
All right, and we're gonna build something that adds

140
00:07:17.160 --> 00:07:20.790
a pizza emoji to the end of it.

141
00:07:20.790 --> 00:07:24.570
So one sort of way that you could do that is you could

142
00:07:24.570 --> 00:07:25.880
first go ahead a select it.

143
00:07:25.880 --> 00:07:30.880 line:15% 
So, const pizzalist is equal to, what did we do?

144
00:07:31.750 --> 00:07:33.883 line:15% 
Let's give it a class of pizza.

145
00:07:41.620 --> 00:07:44.277 line:15% 
Document dot querySelector dot pizza.

146
00:07:44.277 --> 00:07:46.940 line:15% 
And console log

147
00:07:47.975 --> 00:07:50.853 line:15% 
pizzalist dot textContent.

148
00:07:53.384 --> 00:07:55.176 line:15% 
There we go.

149
00:07:55.176 --> 00:07:59.610 line:15% 
Now, if we wanna update that we could

150
00:07:59.610 --> 00:08:00.850 line:15% 
do something like this.

151
00:08:00.850 --> 00:08:04.110 line:15% 
Pizzalist dot textConent is equal to pizzalist

152
00:08:04.110 --> 00:08:08.340 line:15% 
dot textContent plus and we put a pizza on the end.

153
00:08:08.340 --> 00:08:12.173 line:15% 
And I think like ES lingual will turn that into back ticks.

154
00:08:12.173 --> 00:08:13.530 line:15% 
Whoah.

155
00:08:13.530 --> 00:08:15.900 line:15% 
Oh yeah, it turned it into a plus equal.

156
00:08:15.900 --> 00:08:17.530 line:15% 
Nah, that's not what we want.

157
00:08:17.530 --> 00:08:18.963 line:15% 
We want back tick.

158
00:08:26.983 --> 00:08:28.380 line:15% 
So take what was already there

159
00:08:28.380 --> 00:08:30.450 line:15% 
and add another pizza emoji to the end.

160
00:08:30.450 --> 00:08:32.028 line:15% 
Now, when you refresh it there is two.

161
00:08:32.028 --> 00:08:36.461 line:15% 
So that's kinda the way I had some it for a long time.

162
00:08:36.461 --> 00:08:41.060
But that actually was slow in some applications

163
00:08:41.060 --> 00:08:45.410
where I had lots of text and even some HTML

164
00:08:45.410 --> 00:08:48.010
we'll learn about that had it put back in it.

165
00:08:48.010 --> 00:08:50.790
And what that does is it causes the browser to re-render

166
00:08:50.790 --> 00:08:52.002
the entire list.

167
00:08:52.002 --> 00:08:56.036
So what you can do is you can tack text onto the end

168
00:08:56.036 --> 00:09:00.360
with another method called insert adjacent element

169
00:09:00.360 --> 00:09:03.000
or insert adjacent text.

170
00:09:03.000 --> 00:09:06.490
And what that will do will give us the ability to add stuff

171
00:09:06.490 --> 00:09:08.620
onto the front or onto the back of it.

172
00:09:08.620 --> 00:09:10.800 line:15% 
So let's change that.

173
00:09:10.800 --> 00:09:15.263 line:15% 
And we'll just say, pizzalist dot insertAdjacent,

174
00:09:16.377 --> 00:09:17.520 line:15% 
and see there's three of 'em.

175
00:09:17.520 --> 00:09:19.720 line:15% 
Element, HTML and text.

176
00:09:19.720 --> 00:09:23.793 line:15% 
And we can go to MDN and take a quick look.

177
00:09:28.470 --> 00:09:31.510
And you see that this is not a property,

178
00:09:31.510 --> 00:09:32.640
but it is a method.

179
00:09:32.640 --> 00:09:35.440
Meaning that it's a function that we run against

180
00:09:35.440 --> 00:09:38.610
the element much like query selector and query selector all.

181
00:09:38.610 --> 00:09:39.920
It takes two arguments.

182
00:09:39.920 --> 00:09:41.190
First the position:

183
00:09:41.190 --> 00:09:45.130
beforebegin, afterbegin, beforeend, and afterend.

184
00:09:45.130 --> 00:09:48.382
And then you also want to give it

185
00:09:48.382 --> 00:09:51.270
the text that you want to pass it.

186
00:09:51.270 --> 00:09:53.330
It says element here.

187
00:09:53.330 --> 00:09:56.460
But it just means raw text.

188
00:09:56.460 --> 00:09:58.990
This is not adding HTML.

189
00:09:58.990 --> 00:10:00.063
So we could do that.

190
00:10:01.989 --> 00:10:03.239 line:15% 
We want to say,

191
00:10:04.919 --> 00:10:05.752 line:15% 
beforeend.

192
00:10:07.010 --> 00:10:09.403 line:15% 
And we want to add a pizza emoji.

193
00:10:11.849 --> 00:10:13.990 line:15% 
And then we got, it gives us the same thing.

194
00:10:13.990 --> 00:10:16.290 line:15% 
But you should know that that's the best way

195
00:10:16.290 --> 00:10:19.480 line:15% 
to attach text to the end of something.

196
00:10:19.480 --> 00:10:21.057 line:15% 
And we can also like swap it out.

197
00:10:21.057 --> 00:10:23.047 line:15% 
We can say, beforebegin.

198
00:10:24.615 --> 00:10:25.620
What will that do?

199
00:10:25.620 --> 00:10:27.570
You see what that does actually is

200
00:10:28.630 --> 00:10:33.070
it puts the pizza emoji before the paragraph entirely.

201
00:10:33.070 --> 00:10:34.290
Just out on it's own.

202
00:10:34.290 --> 00:10:37.240
So it's not inside of an element any where.

203
00:10:37.240 --> 00:10:39.300
Well it's part of the article, but it's before it.

204
00:10:39.300 --> 00:10:42.557 line:15% 
So we would actually want afterbegin

205
00:10:43.840 --> 00:10:47.040 line:15% 
if we want to put the pizza inside.

206
00:10:47.040 --> 00:10:48.900
So now that should give us, there we go.

207
00:10:48.900 --> 00:10:49.970
Woohoo.

208
00:10:49.970 --> 00:10:52.310
That puts the pizza in front of it.

209
00:10:52.310 --> 00:10:55.170
You see actually, the browser knows that you added that

210
00:10:55.170 --> 00:10:58.437
after the fact because it's split up the text

211
00:10:58.437 --> 00:11:02.540
into what we used to have and what we have added.

212
00:11:02.540 --> 00:11:05.990
That's actually the different between elements and nodes.

213
00:11:05.990 --> 00:11:09.312
So nodes can be anything.

214
00:11:09.312 --> 00:11:12.350
This is also a node, this is a node, this is a node.

215
00:11:12.350 --> 00:11:13.610
But an actual element is

216
00:11:13.610 --> 00:11:17.210
actually just something that is wrapped in a tag.

217
00:11:17.210 --> 00:11:20.330
So that's an element, that's an element, that's an element.

218
00:11:20.330 --> 00:11:22.407
This is just, these are just nodes.

219
00:11:22.407 --> 00:11:25.560
It's a little bit confusing because everything is a node.

220
00:11:25.560 --> 00:11:30.560
And then it only upgrades itself to an element if you

221
00:11:30.604 --> 00:11:33.410
have wrapped it in a tag and in this case

222
00:11:33.410 --> 00:11:34.620
these are just nodes.

223
00:11:34.620 --> 00:11:36.611
I don't know, let's run it again.

224
00:11:36.611 --> 00:11:37.528 line:15% 
Afterbegin.

225
00:11:42.331 --> 00:11:43.498 line:15% 
And beforeend.

226
00:11:46.987 --> 00:11:47.820 line:15% 
Beforeend.

227
00:11:49.934 --> 00:11:50.840
There we go.

228
00:11:50.840 --> 00:11:53.830
So, that's our afterbegin and beforeend.

229
00:11:53.830 --> 00:11:55.983
The best way to tack text onto it.

230
00:11:57.770 --> 00:12:00.430
If you are wondering what all the possible ones are,

231
00:12:00.430 --> 00:12:02.470
I'm not going to sit here and show you absolutely

232
00:12:02.470 --> 00:12:03.390
every single one.

233
00:12:03.390 --> 00:12:05.330
We're just gonna sort of stumble upon these

234
00:12:05.330 --> 00:12:07.530
different properties and methods as we need them.

235
00:12:07.530 --> 00:12:10.160
As we start to build a lot of our exercises.

236
00:12:10.160 --> 00:12:12.732
You can go to the MDN docs and this is

237
00:12:12.732 --> 00:12:15.724
I think super helpful to be able to actually understand

238
00:12:15.724 --> 00:12:19.272
what the possible things are available to us.

239
00:12:19.272 --> 00:12:24.272
So you go to element, which is

240
00:12:24.390 --> 00:12:26.700
an element is just like a tag on the page.

241
00:12:26.700 --> 00:12:28.060
Here's a little example.

242
00:12:28.060 --> 00:12:29.540
Remember I said everything is a node?

243
00:12:29.540 --> 00:12:30.760
This is an element.

244
00:12:30.760 --> 00:12:34.400
And then it tells us what all the properties are

245
00:12:34.400 --> 00:12:36.351
inside of that element.

246
00:12:36.351 --> 00:12:37.880
All kinds of stuff.

247
00:12:37.880 --> 00:12:40.700
The ones with exclamation marks beside them are things

248
00:12:40.700 --> 00:12:42.780
you kinda want to stay away from.

249
00:12:42.780 --> 00:12:45.530
And then you can, where did textContent go?

250
00:12:45.530 --> 00:12:46.473
Let's look for it.

251
00:12:48.570 --> 00:12:51.570
Oh you see, textContent is not here.

252
00:12:51.570 --> 00:12:55.030
And that's because some of the properties

253
00:12:55.030 --> 00:12:56.490
don't just exist on element,

254
00:12:56.490 --> 00:12:58.690
but they also exist on node.

255
00:12:58.690 --> 00:13:02.837
So you can click through to node and look for textContent.

256
00:13:02.837 --> 00:13:04.238
There we go.

257
00:13:04.238 --> 00:13:08.080
And it tells us, returns or sets the textual content of an

258
00:13:08.080 --> 00:13:10.320
element and all of it's descendants.

259
00:13:10.320 --> 00:13:11.600
So we'll go back here.

260
00:13:11.600 --> 00:13:13.770
If wanna know, those are the properties.

261
00:13:13.770 --> 00:13:18.670
And then there's also a huge list of the different methods

262
00:13:18.670 --> 00:13:22.913
and you'll see that there's probably,

263
00:13:24.340 --> 00:13:26.030
here we go, insertAdjacentText.

264
00:13:26.030 --> 00:13:28.120
That's the one we just had.

265
00:13:28.120 --> 00:13:29.650
But, there's also querySelector.

266
00:13:29.650 --> 00:13:31.800
We learned about those methods.

267
00:13:31.800 --> 00:13:32.640
There's matches,

268
00:13:32.640 --> 00:13:35.260
which I'm sure we'll use that in this course at some point.

269
00:13:35.260 --> 00:13:36.930
All kind of different methods in here.

270
00:13:36.930 --> 00:13:39.650
The ones with the little beakers beside it,

271
00:13:39.650 --> 00:13:43.294
are ones that are sort of still in development.

272
00:13:43.294 --> 00:13:46.150
Hopefully, all of these are super handy.

273
00:13:46.150 --> 00:13:48.020
And I bet in the next little while,

274
00:13:48.020 --> 00:13:49.691
you might even be watching this

275
00:13:49.691 --> 00:13:52.224
six months after I release this and these will be

276
00:13:52.224 --> 00:13:55.890
un-beakered because they are super handy and

277
00:13:55.890 --> 00:13:56.850
you'll be able to use 'em.

278
00:13:56.850 --> 00:13:58.230
So that is elements.

279
00:13:58.230 --> 00:14:03.230
That is being able to both get properties from the element,

280
00:14:03.400 --> 00:14:05.360
set properties from the element,

281
00:14:05.360 --> 00:14:09.818
and then also use a little bit more powerful methods

282
00:14:09.818 --> 00:14:11.790
on each of our elements,

283
00:14:11.790 --> 00:14:14.190
or on each of our nodes like insertAdjacentText.

284
00:14:15.430 --> 00:14:16.520
That's the high level.

285
00:14:16.520 --> 00:14:18.580
We're gonna be using that a whole bunch

286
00:14:18.580 --> 00:14:20.660
in our exercises.

287
00:14:20.660 --> 00:14:25.660
For now, let's swoop into working with classes and

288
00:14:25.730 --> 00:14:27.923
other attributes on the element.

